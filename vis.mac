# Macro file for the visualization setting in the initialization phase 
# when running in interactive mode
#

# Use these open statements to open selected visualization
#
# Use this open statement to create an OpenGL view:
/vis/open OGL 600x600-0+0
#
# Use this open statement to create an OpenInventor view:
#/vis/open OI
#
# Use this open statement to create a .prim file suitable for
# viewing in DAWN:
#/vis/open DAWNFILE
#
# Use this open statement to create a .heprep file suitable for
# viewing in HepRApp:
#/vis/open HepRepFile
#
# Use this open statement to create a .wrl file suitable for
# viewing in a VRML viewer:
#/vis/open VRML2FILE
#
# disable auto refresh and quieten vis messages whilst scene and
# trajectories are established
/vis/viewer/set/autoRefresh false
/vis/verbose errors
#
# draw geometry
/vis/drawVolume
#
# Specify view angle:
/vis/viewer/set/viewpointVector -1 0 0
/vis/viewer/set/lightsVector -1 0 0
#
# specify zoom value and view angle
/vis/viewer/zoom 1.7
/vis/viewer/set/viewpointThetaPhi 30. 140.
# 
# Specify style (surface, wireframe, auxiliary edges,...)
/vis/viewer/set/style wireframe
/vis/viewer/set/auxiliaryEdge true
/vis/viewer/set/lineSegmentsPerCircle 100
#
# Draw smooth trajectories at end of event, showing trajectory points
# as markers 2 pixels wide:
/vis/scene/add/trajectories smooth
/vis/modeling/trajectories/create/drawByCharge
#/vis/modeling/trajectories/drawByCharge-0/set 1 blue
#/vis/modeling/trajectories/drawByCharge-0/set -1 red
#/vis/modeling/trajectories/drawByCharge-0/set 0 green
/vis/modeling/trajectories/drawByCharge-0/default/setDrawStepPts true
/vis/modeling/trajectories/drawByCharge-0/default/setStepPtsSize 2
# (if too many tracks cause core dump => /tracking/storeTrajectory 0)
#
# Draw hits at end of event:
#/vis/scene/add/hits
#
# select colour by particle ID
/vis/modeling/trajectories/create/drawByParticleID
/vis/modeling/trajectories/drawByParticleID-0/default/setDrawStepPts true
# /vis/modeling/trajectories/drawByParticleID-0/set e- red
# /vis/modeling/trajectories/drawByParticleID-0/set e+ cyan
# /vis/modeling/trajectories/drawByParticleID-0/set proton blue
# /vis/modeling/trajectories/drawByParticleID-0/set gamma green
# /vis/modeling/trajectories/drawByParticleID-0/set neutron yellow
# /vis/modeling/trajectories/drawByParticleID-0/set pi+ magenta
# /vis/modeling/trajectories/drawByParticleID-0/set pi- magenta
# /vis/modeling/trajectories/drawByParticleID-0/set pi0 magenta
# /vis/modeling/trajectories/drawByParticleID-0/set muon black
# /vis/modeling/trajectories/drawByParticleID-0/set opticalphoton brown
#
# to superimpose all of the events from a given run
/vis/scene/endOfEventAction accumulate
#
# Axes, scale, etc.
/vis/scene/add/scale   # Simple scale line
/vis/scene/add/axes    # Simple axes: x=red, y=green, z=blue.
/vis/scene/add/eventID # Drawn at end of event
/vis/scene/add/date    # Date stamp
/vis/scene/add/logo2D  # Simple logo
/vis/scene/add/logo    # 3D logo
#
# draw coordinate axes
#/vis/scene/add/axes 0 0 0 3 cm 
#
# Frame
/vis/set/colour red
/vis/set/lineWidth 2
/vis/scene/add/frame   # Simple frame around the view
/vis/set/colour        # Revert to default colour (white)
/vis/set/lineWidth     # Revert to default line width (1.)
#
# To get nice view
# Make the "World" box invisible
/vis/geometry/set/visibility World 0 false
# "Envelope" is transparent blue to represent water
# /vis/geometry/set/colour Envelope 0 0 0 1 .3
# /vis/viewer/set/style surface
# /vis/viewer/set/hiddenMarker true
# /vis/viewer/set/viewpointThetaPhi 120 150
#
# draw geometry
#/vis/viewer/flush
# 
# after every run accumulate the results
#/vis/scene/endOfRunAction accumulate
# 
# Re-establish auto refreshing and verbosity:
/vis/viewer/set/autoRefresh true
/vis/verbose warnings

